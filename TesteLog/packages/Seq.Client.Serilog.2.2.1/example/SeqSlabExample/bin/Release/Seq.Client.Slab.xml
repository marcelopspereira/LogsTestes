<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Seq.Client.Slab</name>
    </assembly>
    <members>
        <member name="T:Seq.Client.Slab.SeqSink">
            <summary>
            Writes events over HTTP/S to a Seq server.
            </summary>
        </member>
        <member name="M:Seq.Client.Slab.SeqSink.#ctor(System.String,System.String,System.TimeSpan,System.Int32,System.Int32,System.TimeSpan)">
            <summary>
            Initializes a new instance of the Seq sink.
            </summary>
            <param name="serverUrl">The base URL of the Seq server that log events will be written to.</param>
            <param name="apiKey">A Seq <i>API key</i> that authenticates the client to the Seq server.</param>
            <param name="bufferingInterval">The buffering interval between each batch publishing. Default value is <see cref="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.Buffering.DefaultBufferingInterval"/>.</param>
            <param name="onCompletedTimeout">Time limit for flushing the entries after an <see cref="M:Seq.Client.Slab.SeqSink.OnCompleted"/> call is received.</param>
            <param name="bufferingCount">Number of entries that will trigger batch publishing. Default is <see cref="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.Buffering.DefaultBufferingCount"/></param>
            <param name="maxBufferSize">The maximum number of entries that can be buffered before the sink starts dropping entries.
            This means that if the timeout period elapses, some event entries will be dropped and not sent to the store. Normally, calling <see cref="M:System.IDisposable.Dispose"/> on
            the <see cref="T:System.Diagnostics.Tracing.EventListener"/> will block until all the entries are flushed or the interval elapses.
            If <see langword="null"/> is specified, then the call will block indefinitely until the flush operation finishes.</param>
        </member>
        <member name="M:Seq.Client.Slab.SeqSink.Dispose">
            <summary>
            Releases resources used by the sink.
            </summary>
        </member>
        <member name="M:Seq.Client.Slab.SeqSink.OnCompleted">
            <summary>
            Notifies the sink that the source has finished sending events.
            </summary>
        </member>
        <member name="M:Seq.Client.Slab.SeqSink.OnNext(Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry)">
            <summary>
            Provides the sink with a new entry to write.
            </summary>
            <param name="value">The current entry to write.</param>
        </member>
        <member name="M:Seq.Client.Slab.SeqSink.OnError(System.Exception)">
            <summary>
            Notifies the sink that the source has experienced an error condition.
            </summary>
            <param name="error">An object with information about the error.</param>
        </member>
        <member name="M:Seq.Client.Slab.SeqSink.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">A value indicating whether or not the class is disposing.</param>
        </member>
        <member name="M:Seq.Client.Slab.SeqSink.FlushAsync">
            <summary>
            Causes the buffer to be written immediately.
            </summary>
            <returns>The Task that flushes the buffer.</returns>
        </member>
        <member name="T:Seq.SeqLog">
            <summary>
            Extension methods for configuring the Seq (http://getseq.net) log event sink.
            </summary>
        </member>
        <member name="M:Seq.SeqLog.LogToSeq(System.IObservable{Microsoft.Practices.EnterpriseLibrary.SemanticLogging.EventEntry},System.String,System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Int32,System.Int32)">
            <summary>
            Subscribes to an <see cref="T:System.IObservable`1"/> using a <see cref="T:Seq.Client.Slab.SeqSink"/>.
            </summary>
            <param name="eventStream">The event stream. Typically this is an instance of <see cref="T:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.ObservableEventListener"/>.</param>
            <param name="serverUrl">The base URL of the Seq server that log events will be written to.</param>
            <param name="apiKey">A Seq <i>API key</i> that authenticates the client to the Seq server.</param>
            <param name="bufferingInterval">The buffering interval between each batch publishing. Default value is <see cref="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.Buffering.DefaultBufferingInterval"/>.</param>
            <param name="onCompletedTimeout">Time limit for flushing the entries after an <see cref="M:Seq.Client.Slab.SeqSink.OnCompleted"/> call is received.</param>
            <param name="bufferingCount">Number of entries that will trigger batch publishing. Default is <see cref="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.Buffering.DefaultBufferingCount"/></param>
            <param name="maxBufferSize">The maximum number of entries that can be buffered before the sink starts dropping entries.
            This means that if the timeout period elapses, some event entries will be dropped and not sent to the store. Normally, calling <see cref="M:System.IDisposable.Dispose"/> on
            the <see cref="T:System.Diagnostics.Tracing.EventListener"/> will block until all the entries are flushed or the interval elapses.
            If <see langword="null"/> is specified, then the call will block indefinitely until the flush operation finishes.</param>
            <returns>
            A subscription to the sink that can be disposed to unsubscribe the sink and dispose it, or to get access to the sink instance.
            </returns>
        </member>
        <member name="M:Seq.SeqLog.CreateListener(System.String,System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Int32,System.Int32)">
            <summary>
            Creates an event listener that logs using a <see cref="T:Seq.Client.Slab.SeqSink"/>.
            </summary>
            <param name="serverUrl">The base URL of the Seq server that log events will be written to.</param>
            <param name="apiKey">A Seq <i>API key</i> that authenticates the client to the Seq server.</param>
            <param name="bufferingInterval">The buffering interval between each batch publishing. Default value is <see cref="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.Buffering.DefaultBufferingInterval"/>.</param>
            <param name="listenerDisposeTimeout">Time limit for flushing the entries after an <see cref="M:Seq.Client.Slab.SeqSink.OnCompleted"/> call is received and before disposing the sink.</param>
            <param name="bufferingCount">Number of entries that will trigger batch publishing. Default is <see cref="F:Microsoft.Practices.EnterpriseLibrary.SemanticLogging.Utility.Buffering.DefaultBufferingCount"/></param>
            <param name="maxBufferSize">The maximum number of entries that can be buffered before the sink starts dropping entries.
            This means that if the timeout period elapses, some event entries will be dropped and not sent to the store. Normally, calling <see cref="M:System.IDisposable.Dispose"/> on
            the <see cref="T:System.Diagnostics.Tracing.EventListener"/> will block until all the entries are flushed or the interval elapses.
            If <see langword="null"/> is specified, then the call will block indefinitely until the flush operation finishes.</param>
            <returns>
            An event listener that uses <see cref="T:Seq.Client.Slab.SeqSink"/> to log events.
            </returns>
        </member>
    </members>
</doc>
